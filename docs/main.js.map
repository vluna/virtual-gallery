{"version":3,"sources":["./src/environments/environment.ts","./src/app/exhibitions/exhibitions.component.html","./src/app/exhibitions/exhibitions.component.ts","./src/app/services/exhibitions.service.ts","./src/app/scene/scene.component.ts","./src/app/scene/scene.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pipes/exhibitions-filter.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div *ngIf=\"loading\" id=\"loading-screen\">\n\t<div id=\"spinner\">\n\t\t<div id=\"spinner-spin\"></div>\n\t  <h3 id=\"spinner-text\">Loading Exhibitions</h3>\n\t</div>\n</div>\n\n<header>\n\t<img src=\"assets/images/artnb-logo-white.svg\" width=\"250\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Filter Exhibitions</mat-label>\n    <input type=\"text\" matInput [matAutocomplete]=\"auto\" [(ngModel)]=\"filterText\">\n    <mat-icon matSuffix>search</mat-icon>\n    <mat-autocomplete #auto=\"matAutocomplete\">\n      <mat-option *ngFor=\"let option of exhibitions\" [value]=\"option.title\">\n        {{option.title}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</header>\n\n<section id=\"exhibitions-list\">\n\t<div *ngIf=\"filterMetadata.count == 0\">\n\t\t<mat-card class=\"exhibitions-card\">\n\t\t\t<mat-card-header>\n\t\t    <mat-card-title>{{filterMetadata.count}} Exhibitions</mat-card-title>\n\t\t  </mat-card-header>\n\t\t  <mat-card-content>\n\t\t\t\t<p>It seems your search returned 0 results.</p>\n\t\t\t</mat-card-content>\n\t\t</mat-card>\n\t</div>\n\n\t<div fxLayout.xs=\"column\" fxLayout=\"row wrap\" fxLayoutGap=\"10px\" ngClass.gt-xs=\"ml-10\">\n\t  <h1 fxFlex.sm=\"0 1 calc(100%)\" *ngIf=\"filterMetadata.count > 0\">{{filterMetadata.count}} Exhibition(s)</h1>\n\n\t  <mat-card class=\"exhibitions-card\" *ngFor=\"let exhibition of exhibitions | exhibitionsFilter: filterText:filterMetadata\" fxFlex.sm=\"0 1 calc(50%)\" fxFlex.md=\"0 1 calc(33%)\" fxFlex.gt-md=\"0 1 calc(25%)\">\n\t\t\t<mat-card-header>\n\t\t    <mat-card-title>{{ exhibition.title }}</mat-card-title>\n\t\t  \t<mat-card-subtitle>{{ exhibition.total }} Artworks</mat-card-subtitle>\n\t\t  </mat-card-header>\n\n\t\t  <mat-card-content>\n\t\t  \t<div>\n\t\t    \t<img *ngIf=\"exhibition.image\" mat-card-image src=\"https://www.collectionartnb.ca/{{ exhibition.image }}\" alt=\"Image {{ exhibition.title }}\">\n\t\t    \t<div [innerHTML]=\"exhibition.description\"></div>\n\n\t\t\t  </div>\n\t\t  </mat-card-content>\n\n\t\t  <mat-card-actions>\n\t\t    <a [routerLink]=\"['/exhibitions', exhibition.slug]\" mat-raised-button color=\"primary\">VIEW</a>\n\t\t  </mat-card-actions>\n\t\t</mat-card>\n\t</div>\n</section>\n\n<footer>\n\t<p>&copy; {{ currentYear }} Government of New Brunswick. All rights reserved.</p>\n\t<img src=\"assets/images/ws-logo-white.svg\" width=\"150\">\n</footer>\n","import { Component, OnInit, Input, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ExhibitionsService } from '../services/exhibitions.service';\n\n@Component({\n  selector: 'app-exhibitions',\n  templateUrl: './exhibitions.component.html',\n  styleUrls: ['./exhibitions.component.css']\n})\n\nexport class ExhibitionsComponent implements OnInit, AfterViewChecked {\n  loading: boolean = true;\n\texhibitions: any = [];\n  currentYear: number = new Date().getFullYear();\n  filterText: string;\n  filterMetadata: any = {};\n\n  constructor(\n  \tprivate httpClient: HttpClient,\n  \tprivate exhibitionsService: ExhibitionsService,\n  \tprivate snackBar: MatSnackBar,\n    private cdr: ChangeDetectorRef\n  ) { }\n\n\n  ngOnInit(): void {\n  \tthis.loading = true;\n    this.exhibitionsService.getAll().then((res) => {\n    \tthis.exhibitions = res;\n    \tthis.loading = false;\n      this.filterMetadata = {\n        count: this.exhibitions.length\n      };\n    }, (err) => {\n\t\t  this.snackBar.open(err, \"\", {\n    \t\thorizontalPosition: \"center\",\n    \t\tverticalPosition: \"top\"\n\t\t  });\n    });\n  }\n\n  ngAfterViewChecked() : void {\n    this.cdr.detectChanges();\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable, throwError, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\n\nclass Exhibition {\n  constructor(\n    public id: number,\n    public slug: string,\n    public title: string,\n    public description: string,\n    public image: string,\n    public total: number,\n    public artworks: []\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ExhibitionsService {\n\tURL: string = 'https://www.collectionartnb.ca/exhibitions';\n\tEXHIBITIONS: any = [];\n\tEXHIBITION: any;\n\n  constructor(\n  \tprivate httpClient: HttpClient,\n  ) { }\n\n\tgetAll() {\n\t\tconst promise = new Promise<void>((resolve, reject) => {\n      let endPoint = this.URL;\n      this.httpClient\n        .get<Exhibition[]>(endPoint)\n        .toPromise()\n        .then((res: any) => {\n        \tthis.EXHIBITIONS = res.map((response: any) => {\n        \t\treturn new Exhibition(\n\t\t\t\t\t\t\tresponse.id,\n\t\t\t\t\t\t\tresponse.slug,\n\t\t\t\t\t\t\tresponse.title,\n\t\t\t\t\t\t\tresponse.description,\n\t\t\t\t\t\t\tresponse.image,\n\t\t\t\t\t\t\tresponse.total,\n\t\t\t\t\t\t\tresponse.artworks\n\t\t\t\t\t\t)\n        \t});\n        \tresolve(this.EXHIBITIONS);\n        }, error => {\n\n          reject(\"Error: Unable to load exhibitions.\");\n        }\n      );\n    });\n    return promise;\n\t}\n\n\tgetById(slug) {\n\t\tconst promise = new Promise<void>((resolve, reject) => {\n      let endPoint = `${this.URL}/${slug}`;\n      this.httpClient\n        .get<Exhibition[]>(endPoint)\n        .toPromise()\n        .then((res: any) => {\n      \t\tthis.EXHIBITION = new Exhibition(\n\t\t\t\t\t\tres.id,\n\t\t\t\t\t\tres.slug,\n\t\t\t\t\t\tres.title,\n\t\t\t\t\t\tres.description,\n\t\t\t\t\t\tres.image,\n\t\t\t\t\t\tres.total,\n\t\t\t\t\t\tres.artworks\n\t\t\t\t\t)\n        \tresolve(this.EXHIBITION);\n        }, error => {\n          reject(\"Error: Unable to load exhibition.\");\n        }\n      );\n    });\n    return promise;\n\t}\n}","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Engine, Scene, FreeCamera, Vector3, HemisphericLight, MeshBuilder, SceneLoader, ArcRotateCamera, StandardMaterial, Texture, PBRMetallicRoughnessMaterial, Mesh, ActionManager, InterpolateValueAction, Color3, EasingFunction, Animation, CubicEase, ExecuteCodeAction, DynamicTexture, PointLight } from '@babylonjs/core';\nimport { ExhibitionsService } from '../services/exhibitions.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-scene',\n  templateUrl: './scene.component.html',\n  styleUrls: ['./scene.component.css']\n})\n\nexport class SceneComponent implements OnInit, AfterViewInit {\n\t@ViewChild('renderCanvas') renderCanvas;\n\t\n\tscene: Scene;\n  engine: Engine;\n  exhibition: any;\n  exhibition_slug: string;\n  loading: boolean = true;\n\n  constructor(\n  \tprivate exhibitionsService: ExhibitionsService,\n  \tprivate snackBar: MatSnackBar,\n  \tprivate actRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n  \tthis.actRoute.paramMap.subscribe(params => {\n      this.exhibition_slug = params.get('slug');\n    });\n\n  \tthis.loading = true;\n    this.exhibitionsService.getById(this.exhibition_slug).then((res) => {\n    \tthis.exhibition = res;\n    \tthis.loading = false;\n\n\t    this.scene = this.createScene(this.renderCanvas.nativeElement);\n\n\t    this.engine.runRenderLoop(() => {\n\t      this.scene.render();\n\t    });\n    }, (err) => {\n\t\t  this.snackBar.open(err, \"\", {\n    \t\thorizontalPosition: \"center\",\n    \t\tverticalPosition: \"top\"\n\t\t  });\n    });\n  }\n\n  createScene(canvas: HTMLCanvasElement) {\n \t\t// Dynamic constants from api\n  \tconst artwork_per_wall = Math.ceil(this.exhibition.total / 4)\n  \tconst wall_height = 200;\n  \tconst wall_width = (artwork_per_wall * 75);\n  \tconst half_wall_width = Math.ceil(wall_width / 2);\n  \tconst floor_height = wall_width;\n  \tconst floor_width = wall_width;\n\n    this.engine = new Engine(canvas);\n\n    // This creates a basic Babylon Scene object (non-mesh)\n    const scene = new Scene(this.engine);\n    // Add gravity to keep movement to x and z\n\t\tscene.gravity = new Vector3(0, -0.9, 0);\n\t\tscene.collisionsEnabled = true;\n\n\n\t\t// This creates and positions a free camera (non-mesh)\n    const camera = new FreeCamera('camera-movement', new Vector3(-(half_wall_width/2), 32, -10), scene);\n    // This targets the camera to scene origin\n    camera.setTarget(new Vector3(0, 32, 0));\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n\t\tcamera.checkCollisions = true;\n\t\tcamera.ellipsoid = new Vector3(4, 16, 4);\n    camera.applyGravity = true;\n\n    // // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    // const light = new HemisphericLight('light', new Vector3(0, 1, 0), scene);\n    // // Default intensity is 1. Let's dim the light a small amount\n    // light.intensity = 1;\n\n    // Build walls\n    const wall_material = new StandardMaterial(\"wall_material\", scene);\n\t\twall_material.diffuseTexture = new Texture(\"assets/images/textures/concrete.jpg\", scene);\n\n    const left_wall = MeshBuilder.CreateBox('box', {width: wall_width, height: wall_height}, scene);\n\t\tleft_wall.position = new Vector3(0, 20, -half_wall_width);\n\t\tleft_wall.material = wall_material;\n\t\tleft_wall.checkCollisions = true;\n\t\tleft_wall.position.y = 20;\n\n    const right_wall = MeshBuilder.CreateBox('box', {width: wall_width, height: wall_height}, scene);\n\t\tright_wall.position = new Vector3(0, 20, half_wall_width);\n\t\tright_wall.material = wall_material;\n\t\tright_wall.checkCollisions = true;\n\t\tright_wall.position.y = 20;\n\n    const front_wall = MeshBuilder.CreateBox('box', {width: wall_width, height: wall_height}, scene);\n\t\tfront_wall.position = new Vector3(half_wall_width, 20, 0);\n\t\tfront_wall.material = wall_material;\n\t\tfront_wall.checkCollisions = true;\n\t\tfront_wall.rotation = new Vector3(0, Math.PI / 2, 0);\n\n    const back_wall = MeshBuilder.CreateBox('box', {width: wall_width, height: wall_height}, scene);\n\t\tback_wall.position = new Vector3(-half_wall_width, 20, 0);\n\t\tback_wall.material = wall_material;\n\t\tback_wall.checkCollisions = true;\n\t\tback_wall.rotation = new Vector3(0, -Math.PI / 2, 0);\n\n    \n\t\t// Create ground\n    const ground = MeshBuilder.CreateGround('ground', {width: floor_width, height: floor_width}, scene);\n\t\tconst ground_material = new StandardMaterial(\"ground_material\", scene);\n\t\tground_material.diffuseTexture = new Texture(\"assets/images/textures/wood.jpg\", scene);\n\t\tground.material = ground_material;\n\t\tground.checkCollisions = true;\n\n\t\t// Create painting\n\t\tvar idx_artwork = 0;\n\t\tvar idx_wall = 0;\n\n\t\tvar artwork_space = 0;\n\t\tif(artwork_per_wall > 1) {\n\t\t\tartwork_space = -half_wall_width/((artwork_per_wall/2) <= 1 ? 2 : (artwork_per_wall/2));\n\t\t}\n\n\t\tvar walls = {\n\t\t\t0: { // Front Wall\n\t\t\t\tid: \"front\",\n\t\t\t\trotation: [0, (Math.PI / 2), 0],\n\t\t\t\tposition: [half_wall_width-1, 40, 0],\n\t\t\t\tframe_position: [half_wall_width-.75, 40, 0]\n\t\t\t}, \n\t\t\t1: { // Back Wall\n\t\t\t\tid: \"back\",\n\t\t\t\trotation: [0, (-Math.PI / 2), 0],\n\t\t\t\tposition: [-(half_wall_width-1), 40, 0],\n\t\t\t\tframe_position: [-(half_wall_width-.75), 40, 0]\n\t\t\t}, \n\t\t\t2: { // Left Wall\n\t\t\t\tid: \"left\",\n\t\t\t\trotation: [],\n\t\t\t\tposition: [0, 40, half_wall_width-1],\n\t\t\t\tframe_position: [0, 40, half_wall_width-.75]\n\t\t\t}, \n\t\t\t3: { // Right Wall\n\t\t\t\tid: \"right\",\n\t\t\t\trotation: [0, Math.PI, 0],\n\t\t\t\tposition: [0, 40, -(half_wall_width-1)],\n\t\t\t\tframe_position: [0, 40, -(half_wall_width-.75)]\n\t\t\t}\n\t\t};\n\n\t\tconsole.log(this.exhibition.artworks);\n\n\t\twhile(idx_artwork < this.exhibition.total) {\n\t\t\tfor(let idx = 0; (idx < artwork_per_wall && idx_artwork < this.exhibition.total); idx++) {\n\t\t\t  let artwork = this.exhibition.artworks[idx_artwork];\n\t\t\t\tlet current_wall_position = walls[idx_wall][\"position\"];\n\t\t\t\tlet current_wall_frame_position = walls[idx_wall][\"frame_position\"];\n\t\t\t\tlet current_wall_rotation = walls[idx_wall][\"rotation\"];\n\t  \t\t\n\t\t\t\tlet current_artwork_width = artwork.width / 10;\n\t\t\t\tlet current_artwork_height = artwork.height / 10;\n\n\t\t\t\tvar artwork_texture = new Texture(`https://www.collectionartnb.ca/${artwork.image}`, scene);\n\t\t\t\tvar artwork_plane = MeshBuilder.CreatePlane(artwork.slug, { width: current_artwork_width, height: current_artwork_height }, scene);\n\t\t\t  var artwork_material = new StandardMaterial(`artwork-${artwork.slug}`, scene);\n\t\t\t  artwork_material.diffuseTexture = artwork_texture;\n\t\t\t  artwork_plane.material = artwork_material;\n\n\t\t\t  var frame_texture = new Texture('assets/images/textures/wood.jpg', scene);\n\t\t\t\tvar frame_plane = MeshBuilder.CreatePlane(artwork.slug, { width: current_artwork_width+2, height: current_artwork_height+2 }, scene);\n\t\t\t  var frame_material = new StandardMaterial(`frame-${artwork.slug}`, scene);\n\t\t\t  frame_material.diffuseTexture = frame_texture;\n\t\t\t  frame_plane.material = frame_material;\n\n\t\t\t  if(walls[idx_wall]['id'] == 'left' || walls[idx_wall]['id'] == 'right') {\n\t\t\t\t\tartwork_plane.position = new Vector3(artwork_space, current_wall_position[1], current_wall_position[2])\n\t\t\t\t\tframe_plane.position = new Vector3(artwork_space, current_wall_frame_position[1], current_wall_frame_position[2])\n\t\t\t  } else {\n\t\t\t\t\tartwork_plane.position = new Vector3(current_wall_position[0], current_wall_position[1], artwork_space)\n\t\t\t\t\tframe_plane.position = new Vector3(current_wall_frame_position[0], current_wall_frame_position[1], artwork_space)\n\t\t\t\t}\n\n\t\t    var artwork_light = new PointLight(`light-${artwork.slug}`, new Vector3(0, 30, 0), scene);\n\t\t    artwork_light.range = 150;\n\t\t    artwork_light.intensity = .5;\n\t\t    artwork_light.parent = artwork_plane;\n\n\t\t\t\tif(current_wall_rotation.length > 0) {\n\t\t\t\t\tartwork_plane.rotation = new Vector3(current_wall_rotation[0], current_wall_rotation[1], current_wall_rotation[2]);\n\t\t\t\t\tframe_plane.rotation = new Vector3(current_wall_rotation[0], current_wall_rotation[1], current_wall_rotation[2]);\n\t\t\t\t}\n\n\t\t\t  idx_artwork += 1;\n\t\t\t  artwork_space += 50;\n\n\t\t  //   plane.actionManager = new ActionManager(scene);\n\t\t  //   plane.actionManager.registerAction(\n\t\t  //   \tnew ExecuteCodeAction(\n\t\t  //     ActionManager.OnPickTrigger, function (ev) {\n\t\t  //     \tconsole.log(artwork);\n\t\t  //     \tsetCamLateralLeft(idx);\n\t\t  //       }\n\t\t  //     )\n\t\t\t\t// );\n\t\t  }\n\t\t  idx_wall += 1\n\t\t  var artwork_space = 0;\n\t\t\tif(artwork_per_wall > 1) {\n\t\t\t\tartwork_space = -half_wall_width/((artwork_per_wall/2) <= 1 ? 2 : (artwork_per_wall/2));\n\t\t\t}\n\t\t}\n\n\n\t// \t //Set font type\n //    var font_type = \"Arial\";\n\t\n\t// //Set width an height for plane\n //    var planeWidth = 100;\n //    var planeHeight = 30;\n\n //    //Create plane\n //    var plane = MeshBuilder.CreatePlane(\"plane\", {width:planeWidth, height:planeHeight}, scene);\n\n //    //Set width and height for dynamic texture using same multiplier\n //    var DTWidth = planeWidth * 60;\n //    var DTHeight = planeHeight * 60;\n\n //    //Set text\n //    var text = \"Some words to fit\";\n    \n //    //Create dynamic texture\n //    var dynamicTexture = new DynamicTexture(\"DynamicTexture\", {width:DTWidth, height:DTHeight}, scene, true);\n\n //    //Check width of text for given font type at any size of font\n //    var ctx = dynamicTexture.getContext();\n\t// var size = 12; //any value will work\n //    ctx.font = size + \"px \" + font_type;\n //    var textWidth = ctx.measureText(text).width;\n    \n //    //Calculate ratio of text width to size of font used\n //    var ratio = textWidth/size;\n\t\n\t// //set font to be actually used to write text on dynamic texture\n //    var font_size = Math.floor(DTWidth / (ratio * 1)); //size of multiplier (1) can be adjusted, increase for smaller text\n //    var font = font_size + \"px \" + font_type;\n\t\n\t// //Draw text\n //    dynamicTexture.drawText(text, null, null, font, \"#000000\", \"#ffffff\", true);\n\n //    //create material\n //    var mat = new StandardMaterial(\"mat\", scene);\n //    mat.diffuseTexture = dynamicTexture;\n    \n //    //apply material\n //    plane.material = mat;\n\n\n\t//   var speed = 45;\n\t//   var frameCount = 200;\n\t// \tvar setCamLateralLeft = function(idx) {\n\t//   \tanimateCameraTargetToPosition(camera, speed, frameCount, new Vector3(-240, 15, 10 * idx));\n\t//   \tanimateCameraToPosition(camera, speed, frameCount, new Vector3(-200, 15, 10 * idx));\n\t//   };\n\n\t//     var animateCameraTargetToPosition = function(cam, speed, frameCount, newPos) {\n\t//         var ease = new CubicEase();\n\t//         ease.setEasingMode(EasingFunction.EASINGMODE_EASEINOUT);\n\n\t//         var aable1 = Animation.CreateAndStartAnimation('at5', cam, 'target', speed, frameCount, cam.target, newPos, 0, ease);\n\t//         aable1.disposeOnEnd = true;\n\t//     }\n\n\t//   var animateCameraToPosition = function(cam, speed, frameCount, newPos) {\n\t//   \tvar ease = new CubicEase();\n\t//     ease.setEasingMode(EasingFunction.EASINGMODE_EASEINOUT);\n\t//     var aable2 = Animation.CreateAndStartAnimation('at4', cam, 'position', speed, frameCount, cam.position, newPos, 0, ease);\n\t//     aable2.disposeOnEnd = true;\n\t//   }\n\n\n\t// \tvar artworkTest = function(artwork, idx) {\n\n\t// \t}\n\n    return scene;\n  }\n\n\n\n}\n// var animateCameraToPosition = function(cam, speed, frameCount, newPos) {\n//       }\n\n//     var speed = 45;\n//     var frameCount = 200;\n// ar setCamLateralLeft = function() {\n//         animateCameraTargetToPosition(camera, speed, frameCount, new BABYLON.Vector3(5, 15, 0));\n//         animateCameraToPosition(camera, speed, frameCount, new BABYLON.Vector3(-85, 15, 0));\n//     };","<div *ngIf=\"loading\" id=\"loading-screen\">\n\t<div id=\"spinner\">\n\t\t<div id=\"spinner-spin\"></div>\n\t  <h3 id=\"spinner-text\">Loading Exhibitions</h3>\n\t</div>\n</div>\n\n<canvas id=\"renderCanvas\" #renderCanvas></canvas>","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Exhibitions | collectionArtNB';\n\n  constructor(\n    private titleService: Title\n  ) { }\n\n  ngOnInit() {\n    this.titleService.setTitle(this.title);\n  }\n}\n    ","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { SceneComponent } from './scene/scene.component';\nimport { ExhibitionsComponent } from './exhibitions/exhibitions.component';\n\n// Services\nimport { ExhibitionsService } from './services/exhibitions.service';\n\n// Pipes\nimport { ExhibitionsFilterPipe } from './pipes/exhibitions-filter.pipe';\n\n// Other\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SceneComponent,\n    ExhibitionsComponent,\n    ExhibitionsFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    FlexLayoutModule,\n    FormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  providers: [\n    ExhibitionsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'exhibitionsFilter',\n  pure: false\n})\n\nexport class ExhibitionsFilterPipe implements PipeTransform {\n  transform(items: any[], filterText: string, filterMetadata: any={}): any {\n    if (!items || !filterText) {\n      filterMetadata.count = items.length;\n      return items;\n    }\n    \n    let filteredItems = items.filter(item => item.title.toLowerCase().indexOf(filterText.toLowerCase()) !== -1);\n    filterMetadata.count = filteredItems.length;\n\n    return filteredItems;\n  }\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ExhibitionsComponent } from './exhibitions/exhibitions.component'\nimport { SceneComponent } from './scene/scene.component'\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/exhibitions', pathMatch: 'full' },\n\t{ path: 'exhibitions/:slug', component: SceneComponent },\n\t{ path: 'exhibitions', component: ExhibitionsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}